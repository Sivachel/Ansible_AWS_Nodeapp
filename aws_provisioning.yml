---
- hosts: local
  connection: local
  gather_facts: False
  vars:
    instance_type: t2.micro
    security_group_app: webservers_sg_app
    security_group_db: webservers_sg_db
    image: ami-0f49c6ee8f381746f
    keypair: DevOps250918
    region: eu-west-2
    count: 1
    app_name: Raj_Ansible_NodeApp
    db_name: Raj_Ansible_MongoDB
    hoststring: "ansible_ssh_user=ubuntu ansible_ssh_private_key_file=~/.ssh/DevOps250918.pem "
    hostpath: "./hosts"
  vars_files:
    - aws_keys.yml

  tasks:
      - name: Create a security group for app
        ec2_group:
          name: "{{ security_group_app }}"
          description: The webservers security group
          region: "{{ region }}"
          aws_access_key: "{{ AWS_ACCESS_KEY_ID }}"
          aws_secret_key: "{{ AWS_SECRET_ACCESS_KEY }}"
          rules:
            - proto: tcp
              from_port: 22
              to_port: 22
              cidr_ip: 0.0.0.0/0
            - proto: tcp
              from_port: 80
              to_port: 80
              cidr_ip: 0.0.0.0/0
            - proto: tcp
              from_port: 443
              to_port: 443
              cidr_ip: 0.0.0.0/0
          rules_egress:
            - proto: all
              cidr_ip: 0.0.0.0/0

      - name: Create a security group for db
        ec2_group:
          name: "{{ security_group_db }}"
          description: The mongodb security group
          region: "{{ region }}"
          aws_access_key: "{{ AWS_ACCESS_KEY_ID }}"
          aws_secret_key: "{{ AWS_SECRET_ACCESS_KEY }}"
          rules:
            - proto: tcp
              from_port: 22
              to_port: 22
              cidr_ip: 0.0.0.0/0
            - proto: tcp
              from_port: 27017
              to_port: 27017
              cidr_ip: 0.0.0.0/0
            - proto: tcp
              from_port: 443
              to_port: 443
              cidr_ip: 0.0.0.0/0
          rules_egress:
            - proto: all
              cidr_ip: 0.0.0.0/0

      - name: Launch the new EC2 Instance for app
        ec2:
          aws_access_key: "{{ AWS_ACCESS_KEY_ID }}"
          aws_secret_key: "{{ AWS_SECRET_ACCESS_KEY }}"
          group: "{{ security_group_app }}"
          instance_type: "{{ instance_type }}"
          image: "{{ image }}"
          wait: true
          region: "{{ region }}"
          keypair: "{{ keypair }}"
          count: "{{count}}"
          count_tag:
            Name: "{{ app_name }}"
          instance_tags:
            Name: "{{ app_name }}"
        register: ec2

      - name: Add the newly created EC2 instance(s) to host group
        lineinfile: dest={{ hostpath }}
                    regexp={{ item.public_ip }}
                    insertbefore="[mongoserver]"
                    line="{{ item.public_ip }} {{hoststring}}"
                    state=present
        with_items: "{{ ec2.instances }}"

      - name: Add tag to Instance(s)
        ec2_tag:
          aws_access_key: "{{ AWS_ACCESS_KEY_ID }}"
          aws_secret_key: "{{ AWS_SECRET_ACCESS_KEY }}"
          resource: "{{ item.id }}"
          region: "{{ region }}"
          state: "present"
        with_items: "{{ ec2.instances }}"
        args:
          tags:
            Type: webserver

        # - name: Wait for SSH to come up
        #   wait_for:
        #     host: "{{ item.public_ip }}"
        #     port: 22
        #     state: started
        #   with_items: "{{ ec2.instances }}"

      - name: Wait for SSH to come up
        local_action: wait_for
                      host={{ item.public_ip }}
                      port=22
                      state=started
        with_items: "{{ ec2.instances }}"

        # Need to check if this works 
        # - name: populate /etc/environment
        #   lineinfile:
        #     dest: "/etc/environment"
        #     state: present
        #     regexp: "^{{ item.key }}"
        #     line: "{{ item.key }}={{ item.value}}"
        #   with_items: "{{ os_environment }}"

      - name: Launch the new EC2 Instance for db
        ec2:
          aws_access_key: "{{ AWS_ACCESS_KEY_ID }}"
          aws_secret_key: "{{ AWS_SECRET_ACCESS_KEY }}"
          group: "{{ security_group_db }}"
          instance_type: "{{ instance_type }}"
          image: "{{ image }}"
          wait: true
          region: "{{ region }}"
          keypair: "{{ keypair }}"
          count: "{{count}}"
          count_tag:
            Name: "{{ db_name }}"
          instance_tags:
            Name: "{{ db_name }}"
        register: ec2

      - name: Add the newly created EC2 instance(s) to host group
        lineinfile: dest={{ hostpath }}
                    regexp={{ item.public_ip }}
                    insertafter="[mongoserver]"
                    line="{{ item.public_ip }} {{hoststring}}"
                    state=present
        with_items: "{{ ec2.instances }}"

      # - name: Add the newly created host so that we can further contact it
      #   add_host:
      #     name: "{{ item.public_ip }}"
      #     groups: webservers
      #   with_items: "{{ ec2.instances }}"

      - name: Add tag to Instance(s)
        ec2_tag:
          aws_access_key: "{{ AWS_ACCESS_KEY_ID }}"
          aws_secret_key: "{{ AWS_SECRET_ACCESS_KEY }}"
          resource: "{{ item.id }}"
          region: "{{ region }}"
          state: "present"
        with_items: "{{ ec2.instances }}"
        args:
          tags:
            Type: mongoserver

      # - name: Wait for SSH to come up
      #   wait_for:
      #     host: "{{ item.public_ip }}"
      #     port: 22
      #     state: started
      #   with_items: "{{ ec2.instances }}"

      - name: Wait for SSH to come up
        local_action: wait_for
                      host={{ item.public_ip }}
                      port=22
                      state=started
        with_items: "{{ ec2.instances }}"
