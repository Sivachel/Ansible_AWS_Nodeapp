---
- hosts: webservers
  remote_user: ubuntu
  become: yes
  gather_facts: False
  vars:
    NODEJS_VERSION: "6"
    ansible_distribution_release: "xenial" #trusty

  pre_tasks:
    - name: 'install python'
      raw: 'sudo apt-get -y install python'
  tasks:
    - name: Install the gpg key for nodejs LTS
      apt_key:
        url: "https://deb.nodesource.com/gpgkey/nodesource.gpg.key"
        state: present
    - name: Install the nodejs LTS repos
      apt_repository:
        repo: "deb https://deb.nodesource.com/node_{{ NODEJS_VERSION }}.x {{ ansible_distribution_release }} main"
        state: present
        update_cache: yes
    - name: Install the nodejs
      apt:
        name: nodejs
        state: present

    - name: install nginx
      apt: name=nginx update_cache=yes
    - name: copy nginx config file
      copy: src=template/nginx.conf dest=/etc/nginx/sites-available/nginx.conf
    - name: enable configuration
      file: dest=/etc/nginx/sites-enabled/nginx.conf src=/etc/nginx/sites-available/nginx.conf state=link

    - name: delete default
      file:
        path: /etc/nginx/sites-enabled/default
        state: absent

    - name: restart nginx
      service: name=nginx state=restarted

    # Need to figure out to connect another instance
    # - name: Setting Environmental Variablle for DB_HOST
    #   shell: "echo $DB_HOST"
    #   environment:
    #     DB_HOST: 'mongodb://192.168.10.140:27017/posts'

    - name: Ansible copy file to remote server
      copy:
        src: node-sample-app/
        dest: /home/ubuntu/app/
#This can be replaced using roles
